// Code generated by protoc-gen-go. DO NOT EDIT.
// source: voting/protobuf/voting/ballot_log.proto

package voting

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// BallotLog represents a change of the ballot
type BallotLog struct {
	VoteId               string   `protobuf:"bytes,1,opt,name=vote_id,json=voteId,proto3" json:"vote_id,omitempty"`
	HashedCode           string   `protobuf:"bytes,2,opt,name=hashed_code,json=hashedCode,proto3" json:"hashed_code,omitempty"`
	Choice               string   `protobuf:"bytes,3,opt,name=choice,proto3" json:"choice,omitempty"`
	ProcessedAt          int64    `protobuf:"varint,14,opt,name=processed_at,json=processedAt,proto3" json:"processed_at,omitempty"`
	LoggedAt             int64    `protobuf:"varint,15,opt,name=logged_at,json=loggedAt,proto3" json:"logged_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BallotLog) Reset()         { *m = BallotLog{} }
func (m *BallotLog) String() string { return proto.CompactTextString(m) }
func (*BallotLog) ProtoMessage()    {}
func (*BallotLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_2ae8e3dadbdb2089, []int{0}
}

func (m *BallotLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BallotLog.Unmarshal(m, b)
}
func (m *BallotLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BallotLog.Marshal(b, m, deterministic)
}
func (m *BallotLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BallotLog.Merge(m, src)
}
func (m *BallotLog) XXX_Size() int {
	return xxx_messageInfo_BallotLog.Size(m)
}
func (m *BallotLog) XXX_DiscardUnknown() {
	xxx_messageInfo_BallotLog.DiscardUnknown(m)
}

var xxx_messageInfo_BallotLog proto.InternalMessageInfo

func (m *BallotLog) GetVoteId() string {
	if m != nil {
		return m.VoteId
	}
	return ""
}

func (m *BallotLog) GetHashedCode() string {
	if m != nil {
		return m.HashedCode
	}
	return ""
}

func (m *BallotLog) GetChoice() string {
	if m != nil {
		return m.Choice
	}
	return ""
}

func (m *BallotLog) GetProcessedAt() int64 {
	if m != nil {
		return m.ProcessedAt
	}
	return 0
}

func (m *BallotLog) GetLoggedAt() int64 {
	if m != nil {
		return m.LoggedAt
	}
	return 0
}

func init() {
	proto.RegisterType((*BallotLog)(nil), "voting.BallotLog")
}

func init() {
	proto.RegisterFile("voting/protobuf/voting/ballot_log.proto", fileDescriptor_2ae8e3dadbdb2089)
}

var fileDescriptor_2ae8e3dadbdb2089 = []byte{
	// 185 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0xce, 0xb1, 0xaa, 0xc2, 0x30,
	0x14, 0xc6, 0x71, 0x72, 0x0b, 0xbd, 0xf6, 0x54, 0x14, 0x32, 0x68, 0xc0, 0xc1, 0xea, 0x62, 0x27,
	0x3b, 0xf8, 0x04, 0xd5, 0x49, 0x70, 0xea, 0x0b, 0x84, 0x36, 0x39, 0xa6, 0x85, 0xe0, 0x29, 0x6d,
	0xec, 0xdb, 0xf8, 0xae, 0x62, 0x22, 0x8e, 0xdf, 0xff, 0x97, 0xc0, 0x81, 0xc3, 0x44, 0xae, 0x7b,
	0x98, 0xa2, 0x1f, 0xc8, 0x51, 0xf3, 0xbc, 0x17, 0xdf, 0xdd, 0xd4, 0xd6, 0x92, 0x93, 0x96, 0xcc,
	0xd1, 0x13, 0x8f, 0x03, 0xec, 0x5f, 0x0c, 0x92, 0xb3, 0xc7, 0x1b, 0x19, 0xbe, 0x86, 0xff, 0x89,
	0x1c, 0xca, 0x4e, 0x0b, 0x96, 0xb1, 0x3c, 0xa9, 0x3e, 0xcf, 0xf0, 0xaa, 0xf9, 0x16, 0xd2, 0xb6,
	0x1e, 0x5b, 0xd4, 0x52, 0x91, 0x46, 0xf1, 0xe7, 0x11, 0x42, 0xba, 0x90, 0x46, 0xbe, 0x82, 0x58,
	0xb5, 0xd4, 0x29, 0x14, 0x51, 0xf8, 0x18, 0x16, 0xdf, 0xc1, 0xbc, 0x1f, 0x48, 0xe1, 0x38, 0xa2,
	0x96, 0xb5, 0x13, 0x8b, 0x8c, 0xe5, 0x51, 0x95, 0xfe, 0x5a, 0xe9, 0xf8, 0x06, 0x12, 0x4b, 0xc6,
	0x04, 0x5f, 0x7a, 0x9f, 0x85, 0x50, 0xba, 0x26, 0xf6, 0xe7, 0x9e, 0xde, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x24, 0x0a, 0xfe, 0xf1, 0xd9, 0x00, 0x00, 0x00,
}
